<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>rs</string>
	</array>
	<key>name</key>
	<string>Rust</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>\b(impl)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Implementation</string>
			<key>end</key>
			<string>\{</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sigils</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mut</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dyn</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ref_lifetime</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_marker</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_traits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#std_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#std_traits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#where</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bfor\b</string>
					<key>name</key>
					<string>storage.type.rust</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#block_doc_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#block_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#line_doc_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#line_comment</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>#\!?\[</string>
			<key>comment</key>
			<string>Attribute</string>
			<key>end</key>
			<string>\]</string>
			<key>name</key>
			<string>meta.attribute.rust</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block_doc_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line_doc_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line_comment</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Single-quote string literal (character)</string>
			<key>match</key>
			<string>b?'([^'\\]|\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.))'</string>
			<key>name</key>
			<string>string.quoted.single.rust</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#string_literal</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#raw_string_literal</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Floating point literal (fraction)</string>
			<key>match</key>
			<string>\b[0-9][0-9_]*\.[0-9][0-9_]*([eE][+-]?[0-9_]+)?(f32|f64)?\b</string>
			<key>name</key>
			<string>constant.numeric.float.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Floating point literal (exponent)</string>
			<key>match</key>
			<string>\b[0-9][0-9_]*(\.[0-9][0-9_]*)?[eE][+-]?[0-9_]+(f32|f64)?\b</string>
			<key>name</key>
			<string>constant.numeric.float.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Floating point literal (typed)</string>
			<key>match</key>
			<string>\b[0-9][0-9_]*(\.[0-9][0-9_]*)?([eE][+-]?[0-9_]+)?(f32|f64)\b</string>
			<key>name</key>
			<string>constant.numeric.float.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Integer literal (decimal)</string>
			<key>match</key>
			<string>\b[0-9][0-9_]*([ui](8|16|32|64|128|s|size))?\b</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Integer literal (hexadecimal)</string>
			<key>match</key>
			<string>\b0x[a-fA-F0-9_]+([ui](8|16|32|64|128|s|size))?\b</string>
			<key>name</key>
			<string>constant.numeric.integer.hexadecimal.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Integer literal (octal)</string>
			<key>match</key>
			<string>\b0o[0-7_]+([ui](8|16|32|64|128|s|size))?\b</string>
			<key>name</key>
			<string>constant.numeric.integer.octal.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Integer literal (binary)</string>
			<key>match</key>
			<string>\b0b[01_]+([ui](8|16|32|64|128|s|size))?\b</string>
			<key>name</key>
			<string>constant.numeric.integer.binary.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Static storage modifier</string>
			<key>match</key>
			<string>\bstatic\b</string>
			<key>name</key>
			<string>storage.modifier.static.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Boolean constant</string>
			<key>match</key>
			<string>\b(true|false)\b</string>
			<key>name</key>
			<string>constant.language.boolean.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Control keyword</string>
			<key>match</key>
			<string>\b(async|await|break|continue|else|if|in|for|loop|match|return|try|while)\b</string>
			<key>name</key>
			<string>keyword.control.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Keyword</string>
			<key>match</key>
			<string>\b(crate|extern|mod|let|ref|use|super|move)\b</string>
			<key>name</key>
			<string>keyword.other.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Reserved keyword</string>
			<key>match</key>
			<string>\b(abstract|alignof|become|do|final|macro|offsetof|override|priv|proc|pure|sizeof|typeof|virtual|yield)\b</string>
			<key>name</key>
			<string>invalid.deprecated.rust</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#unsafe</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#sigils</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#self</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#mut</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#dyn</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#impl</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#box</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#lifetime</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#ref_lifetime</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#const</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#pub</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Miscellaneous operator</string>
			<key>match</key>
			<string>(=&gt;|::|\bas\b)</string>
			<key>name</key>
			<string>keyword.operator.misc.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Comparison operator</string>
			<key>match</key>
			<string>(&amp;&amp;|\|\||==|!=)</string>
			<key>name</key>
			<string>keyword.operator.comparison.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Assignment operator</string>
			<key>match</key>
			<string>(\+=|-=|/=|\*=|%=|\^=|&amp;=|\|=|&lt;&lt;=|&gt;&gt;=|=)</string>
			<key>name</key>
			<string>keyword.operator.assignment.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Arithmetic operator</string>
			<key>match</key>
			<string>(!|\+|-|/|\*|%|\^|&amp;|\||&lt;&lt;|&gt;&gt;)</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Comparison operator (second group because of regex precedence)</string>
			<key>match</key>
			<string>(&lt;=|&gt;=|&lt;|&gt;)</string>
			<key>name</key>
			<string>keyword.operator.comparison.rust</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#core_types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#core_vars</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#core_marker</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#core_traits</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#std_types</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#std_traits</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Built-in macro</string>
			<key>match</key>
			<string>\b(macro_rules|compile_error|format_args|env|option_env|concat_idents|concat|line|column|file|stringify|include|include_str|include_bytes|module_path|cfg)!</string>
			<key>name</key>
			<string>support.function.builtin.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Core macro</string>
			<key>match</key>
			<string>\b(panic|assert|assert_eq|assert_ne|debug_assert|debug_assert_eq|debug_assert_ne|try|write|writeln|unreachable|unimplemented)!</string>
			<key>name</key>
			<string>support.function.core.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Standard library macro</string>
			<key>match</key>
			<string>\b(format|print|println|eprint|eprintln|select|vec)!</string>
			<key>name</key>
			<string>support.function.std.rust</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Logging macro</string>
			<key>match</key>
			<string>\b(log|error|warn|info|debug|trace|log_enabled)!</string>
			<key>name</key>
			<string>support.function.log.rust</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.macro.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Invokation of a macro</string>
			<key>match</key>
			<string>\b([a-zA-Z_][a-zA-Z0-9_]*\!)\s*[({\[]</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Function call</string>
			<key>match</key>
			<string>\b([A-Za-z][A-Za-z0-9_]*|_[A-Za-z0-9_]+)\s*\(</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b([A-Za-z][A-Za-z0-9_]*|_[A-Za-z0-9_]+)\s*(::)(?=\s*&lt;.*&gt;\s*\()</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.rust</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.misc.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Function call with type parameters</string>
			<key>end</key>
			<string>\(</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(fn)\s+([A-Za-z][A-Za-z0-9_]*|_[A-Za-z0-9_]+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.fn.rust</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Function definition</string>
			<key>end</key>
			<string>[\{;]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sigils</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#self</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mut</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dyn</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#impl</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ref_lifetime</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_marker</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_traits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#std_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#std_traits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#const</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#where</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unsafe</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Function arguments</string>
					<key>match</key>
					<string>\bfn\b</string>
					<key>name</key>
					<string>keyword.other.fn.rust</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(enum|struct|trait|union)\s+([a-zA-Z_][a-zA-Z0-9_]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.rust</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Type declaration</string>
			<key>end</key>
			<string>[\{\(;]</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_traits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#std_traits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#pub</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#where</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(type)\s+([a-zA-Z_][a-zA-Z0-9_]*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.rust</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Type alias</string>
			<key>end</key>
			<string>;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sigils</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mut</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dyn</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#impl</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#lifetime</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ref_lifetime</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_marker</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_traits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#std_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#std_traits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>block_comment</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>comment</key>
			<string>Block comment</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.rust</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_doc_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
			</array>
		</dict>
		<key>block_doc_comment</key>
		<dict>
			<key>begin</key>
			<string>/\*[\*!](?![\*/])</string>
			<key>comment</key>
			<string>Block documentation comment</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.documentation.rust</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_doc_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
			</array>
		</dict>
		<key>box</key>
		<dict>
			<key>comment</key>
			<string>Box storage modifier</string>
			<key>match</key>
			<string>\bbox\b</string>
			<key>name</key>
			<string>storage.modifier.box.rust</string>
		</dict>
		<key>const</key>
		<dict>
			<key>comment</key>
			<string>Const storage modifier</string>
			<key>match</key>
			<string>\bconst\b</string>
			<key>name</key>
			<string>storage.modifier.const.rust</string>
		</dict>
		<key>core_marker</key>
		<dict>
			<key>comment</key>
			<string>Core trait (marker)</string>
			<key>match</key>
			<string>\b(Copy|Send|Sized|Sync)\b</string>
			<key>name</key>
			<string>support.type.marker.rust</string>
		</dict>
		<key>core_traits</key>
		<dict>
			<key>comment</key>
			<string>Core trait</string>
			<key>match</key>
			<string>\b(Drop|Fn|FnMut|FnOnce|Clone|PartialEq|PartialOrd|Eq|Ord|AsRef|AsMut|Into|From|Default|Iterator|Extend|IntoIterator|DoubleEndedIterator|ExactSizeIterator)\b</string>
			<key>name</key>
			<string>support.type.core.rust</string>
		</dict>
		<key>core_types</key>
		<dict>
			<key>comment</key>
			<string>Built-in/core type</string>
			<key>match</key>
			<string>\b(bool|char|usize|isize|u8|u16|u32|u64|u128|i8|i16|i32|i64|i128|f32|f64|str|Self|Option|Result)\b</string>
			<key>name</key>
			<string>storage.type.core.rust</string>
		</dict>
		<key>core_vars</key>
		<dict>
			<key>comment</key>
			<string>Core type variant</string>
			<key>match</key>
			<string>\b(Some|None|Ok|Err)\b</string>
			<key>name</key>
			<string>support.constant.core.rust</string>
		</dict>
		<key>dyn</key>
		<dict>
			<key>comment</key>
			<string>Dynamic modifier</string>
			<key>match</key>
			<string>\bdyn\b</string>
			<key>name</key>
			<string>storage.modifier.dyn.rust</string>
		</dict>
		<key>escaped_character</key>
		<dict>
			<key>match</key>
			<string>\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
			<key>name</key>
			<string>constant.character.escape.rust</string>
		</dict>
		<key>impl</key>
		<dict>
			<key>comment</key>
			<string>Existential type modifier</string>
			<key>match</key>
			<string>\bimpl\b</string>
			<key>name</key>
			<string>storage.modifier.impl.rust</string>
		</dict>
		<key>lifetime</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.lifetime.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Named lifetime</string>
			<key>match</key>
			<string>'([a-zA-Z_][a-zA-Z0-9_]*)\b</string>
			<key>name</key>
			<string>storage.modifier.lifetime.rust</string>
		</dict>
		<key>line_comment</key>
		<dict>
			<key>begin</key>
			<string>//</string>
			<key>comment</key>
			<string>Single-line comment</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.double-slash.rust</string>
		</dict>
		<key>line_doc_comment</key>
		<dict>
			<key>begin</key>
			<string>//[!/](?=[^/])</string>
			<key>comment</key>
			<string>Single-line documentation comment</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.documentation.rust</string>
		</dict>
		<key>mut</key>
		<dict>
			<key>comment</key>
			<string>Mutable storage modifier</string>
			<key>match</key>
			<string>\bmut\b</string>
			<key>name</key>
			<string>storage.modifier.mut.rust</string>
		</dict>
		<key>pub</key>
		<dict>
			<key>comment</key>
			<string>Visibility modifier</string>
			<key>match</key>
			<string>\bpub\b</string>
			<key>name</key>
			<string>storage.modifier.visibility.rust</string>
		</dict>
		<key>raw_string_literal</key>
		<dict>
			<key>begin</key>
			<string>b?r(#*)"</string>
			<key>comment</key>
			<string>Raw double-quote string literal</string>
			<key>end</key>
			<string>"\1</string>
			<key>name</key>
			<string>string.quoted.double.raw.rust</string>
		</dict>
		<key>ref_lifetime</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.lifetime.rust</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.lifetime.rust</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Reference with named lifetime</string>
			<key>match</key>
			<string>&amp;('([a-zA-Z_][a-zA-Z0-9_]*))\b</string>
		</dict>
		<key>self</key>
		<dict>
			<key>comment</key>
			<string>Self variable</string>
			<key>match</key>
			<string>\bself\b</string>
			<key>name</key>
			<string>variable.language.rust</string>
		</dict>
		<key>sigils</key>
		<dict>
			<key>comment</key>
			<string>Sigil</string>
			<key>match</key>
			<string>[&amp;*](?=[a-zA-Z0-9_\(\[\|\"]+)</string>
			<key>name</key>
			<string>keyword.operator.sigil.rust</string>
		</dict>
		<key>std_traits</key>
		<dict>
			<key>comment</key>
			<string>Standard library trait</string>
			<key>match</key>
			<string>\b(ToOwned|ToString)\b</string>
			<key>name</key>
			<string>support.type.std.rust</string>
		</dict>
		<key>std_types</key>
		<dict>
			<key>comment</key>
			<string>Standard library type</string>
			<key>match</key>
			<string>\b(Box|String|Vec|Path|PathBuf)\b</string>
			<key>name</key>
			<string>storage.class.std.rust</string>
		</dict>
		<key>string_literal</key>
		<dict>
			<key>begin</key>
			<string>b?"</string>
			<key>comment</key>
			<string>Double-quote string literal</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.rust</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escaped_character</string>
				</dict>
			</array>
		</dict>
		<key>type</key>
		<dict>
			<key>comment</key>
			<string>A type</string>
			<key>match</key>
			<string>\b([A-Za-z][_A-Za-z0-9]*|_[_A-Za-z0-9]+)\b</string>
			<key>name</key>
			<string>entity.name.type.rust</string>
		</dict>
		<key>type_params</key>
		<dict>
			<key>begin</key>
			<string>&lt;(?![=&lt;])</string>
			<key>comment</key>
			<string>Type parameters</string>
			<key>end</key>
			<string>(?&lt;![-])&gt;</string>
			<key>name</key>
			<string>meta.type_params.rust</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#line_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sigils</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#mut</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dyn</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#impl</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#lifetime</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_marker</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#core_traits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#std_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#std_traits</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_params</string>
				</dict>
			</array>
		</dict>
		<key>unsafe</key>
		<dict>
			<key>comment</key>
			<string>Unsafe code keyword</string>
			<key>match</key>
			<string>\bunsafe\b</string>
			<key>name</key>
			<string>keyword.other.unsafe.rust</string>
		</dict>
		<key>where</key>
		<dict>
			<key>comment</key>
			<string>Generic where clause</string>
			<key>match</key>
			<string>\bwhere\b</string>
			<key>name</key>
			<string>keyword.other.where.rust</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.rust</string>
</dict>
</plist>
